# Base our image on an official, minimal image of our preferred Ruby
FROM ruby:2.3.0-slim
# Install essential Linux packages
RUN apt-get update -qq && apt-get install -y build-essential libpq-dev postgresql-client nodejs

# Define where our application will live inside the image

ENV app /var/www/uprogress
RUN mkdir -p $app/tmp/pids
WORKDIR $app

COPY Gemfile Gemfile

COPY Gemfile.lock Gemfile.lock
COPY . .

ENV RAILS_ENV production
ENV RACK_ENV production
# Use the Gemfiles as Docker cache markers. Always bundle before copying app src.
# (the src likely changed and we don't want to invalidate Docker's cache too early)
# http://ilikestuffblog.com/2014/01/06/how-to-skip-bundle-install-when-deploying-a-rails-app-to-docker/

# Copy the Rails application into place

# COPY Gemfile Gemfile
#
# COPY Gemfile.lock Gemfile.lock

# Prevent bundler warnings; ensure that the bundler version executed is >= that which created Gemfile.lock
RUN gem install bundler

# Finish establishing our Ruby enviornment
RUN bundle install


# Define the script we want run once the container boots
# Use the "exec" form of CMD so our script shuts down gracefully on SIGTERM (i.e. `docker stop`)
# CMD [ "bundle", "exec", "rails", "s", "-b", "0.0.0.0", "-p", "3000" ]
# "bundle", "exec", "rails", "s", "-b", "0.0.0.0", "-p", "3000"
